#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using template {{.TemplateName}} on {{.DateTime}}
cd $(dirname $0)
source cookbook_include.sh
os=$(uname -s | tr 'A-Z' 'a-z')

if [ -z "$HOME" ]
then
    echo "Environment variable \$HOME not set"
    echo "nothing will work until this variable is defined"
    exit 1
fi

if [ -d $SANDBOX_BINARY ]
then
    echo "\$SANDBOX_BINARY directory '$SANDBOX_BINARY' exists"
else
    header "Creating Sandbox binary directory ($SANDBOX_BINARY)"
    mkdir -p $SANDBOX_BINARY	
fi

found_versions=$(ls $SANDBOX_BINARY | wc -l | tr -d '\t ' )

function get_prerequisites_linux {
    echo "# FOR REGULAR MYSQL"
    echo "# run the commands: "
    echo ""
    echo "1. dbdeployer downloads list"
    echo "2. dbdeployer downloads get-by-version 5.7 --newest --minimal"
    echo "3. dbdeployer unpack mysql-5.7.26.tar.xz"
    echo ""
    echo "4. dbdeployer versions"
    echo ""
    echo "# FOR MySQL forks, MySQL Cluster, PXC:"
    echo ""
    echo "# 1. Get the binaries from the maker download pages"
    echo "# 2. run the command"
    echo " dbdeployer unpack FlavorName-X.X.XX-OS.tar.gz  --prefix=FlavorName"
    echo "3. dbdeployer versions"
}

function get_prerequisites_darwin {
    echo "# 1a. Get the binaries from https://dev.mysql.com/downloads"
	echo "  dbdeployer downloads get mysql-5.7.26-macos10.14-x86_64.tar.gz "
	echo "  dbdeployer downloads get mysql-8.0.16-macos10.14-x86_64.tar.gz "
	echo "  dbdeployer downloads get-by-version 8.0 --newest"
    echo "# or"
    echo "# 1b. Get the binaries from the MySQL fork download pages"
    echo "# run the commands:"
    echo "2a. dbdeployer unpack mysql-5.7.26-macos10.14-x86_64.tar.gz [--prefix=FlavorName]"
	echo "# or"
    echo "2b. dbdeployer unpack mysql-8.0.16-macos10.14-x86-64bit.tar.gz [--prefix=FlavorName]"
	echo "# or"
    echo "2c. dbdeployer unpack FlavorName-X.X.XX-OS.tar.gz  --prefix=FlavorName"
    echo "3. dbdeployer versions"
}

more_opts=""
if [ $found_versions != 0 ]
then
    echo "# Found versions ready to use:"
    dbdeployer versions
    echo ""
    more_opts="[MORE]"
fi

echo ""
echo "## HOW TO GET $more_opts binaries for dbdeployer "
case $os in 
linux)
    get_prerequisites_linux
    ;;
darwin)
    get_prerequisites_darwin
    ;;
*)
    echo "operating system $os not supported"
    exit 1
    ;;
esac


